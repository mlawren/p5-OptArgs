# Generated by Class::Inline version 0.0.1
# Date: Tue Sep 20 13:03:30 2022
use strict;
use warnings;

package OptArgs2::Arg_CI;             ## CI_PM_FILTER
use Class::Inline::Check              ## CI_PM_FILTER
  strip       => 1,                   ## CI_PM_FILTER
  tidy        => 0,                   ## CI_PM_FILTER
  wrap        => 0,                   ## CI_PM_FILTER
  wrap_indent => 0,                   ## CI_PM_FILTER
  wrap_maxlen => 78,                  ## CI_PM_FILTER
  code        => <<'CI_PM_FILTER';    ## CI_PM_FILTER

sub OptArgs2::Arg_CI::import {shift;my$ref={@_ > 1 ? @_ : %{$_[0]}};$OptArgs2::Arg::_CI=exists$ref->{'has'}? $ref : {has=>$ref }}package OptArgs2::Arg;BEGIN {require OptArgs2::OptArgBase;our@ISA=('OptArgs2::OptArgBase')};require Carp;require Scalar::Util;our%_ATTRS;my%_BUILD_CHECK;sub new {my$class=shift;my$self={@_ ? @_ > 1 ? @_ : %{$_[0]}: ()};%_ATTRS=map {($_=>1)}keys %$self;bless$self,ref$class || $class;$_BUILD_CHECK{$class}//= do {my@possible=($class);my@BUILD;my@CHECK;while (@possible){no strict 'refs';my$c=shift@possible;push@BUILD,$c .'::BUILD' if exists &{$c .'::BUILD'};push@CHECK,$c .'::__CHECK' if exists &{$c .'::__CHECK'};push@possible,@{$c .'::ISA'}}[reverse(@CHECK),reverse(@BUILD)]};map {$self->$_}@{$_BUILD_CHECK{$class}};Carp::carp("OptArgs2::Arg attribute '$_' unexpected")for keys%_ATTRS;$self}sub __RO {my (undef,undef,undef,$sub)=caller(1);Carp::croak("attribute $sub is read-only")}sub __CHECK {no strict 'refs';my$_attrs=*{ref($_[0]).'::_ATTRS'};map {delete$_attrs->{$_}}keys %{$OptArgs2::Arg::_CI->{'has'}};Scalar::Util::weaken($_[0]{'cmd'})if exists $_[0]{'cmd'}&& defined $_[0]{'cmd'}}sub cmd {if (@_ > 1){$_[0]{'cmd'}=$_[1];Scalar::Util::weaken($_[0]{'cmd'})if defined $_[0]{'cmd'};return $_[0]}$_[0]{'cmd'}}sub fallback {if (@_ > 1){$_[0]{'fallback'}=$_[1];return $_[0]}$_[0]{'fallback'}}sub greedy {$_[0]->__RO($_[1])if @_ > 1;$_[0]{'greedy'}}sub _dump {my$self=shift;my$d=shift // 1;require Data::Dumper;no warnings 'once';local$Data::Dumper::Indent=1;local$Data::Dumper::Maxdepth=$d;local$Data::Dumper::Sortkeys=1;my$x=Data::Dumper::Dumper($self);$x =~ s/.*?{/{/;$x =~ s/}.*?\n$/}/;my$i=0;my@list;do {@list=caller($i++)}until$list[3]eq 'OptArgs2::Arg::_dump';warn "$self $x at $list[1]:$list[2]\n"}BEGIN {$INC{'OptArgs2/Arg.pm'}=__FILE__}
CI_PM_FILTER
1;
